% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/descriptivestat.R
\name{descriptivestat}
\alias{descriptivestat}
\title{Embed Descriptive Statistics into Original Dataset}
\usage{
descriptivestat(
  data,
  group_vars,
  value_vars,
  output_stats = c("v", "sd", "se", "ci", "cv", "iqr")
)
}
\arguments{
\item{data}{A data frame containing the input dataset.}

\item{group_vars}{Character vector of column names used to group the data (e.g., "treatment", "rep").}

\item{value_vars}{Character vector of numeric variable names to compute statistics for (e.g., "yield", "biomass").}

\item{output_stats}{Character vector of statistics to compute. Valid options include:
\itemize{
\item \code{"v"}: Variance
\item \code{"sd"}: Standard deviation
\item \code{"se"}: Standard error
\item \code{"ci"}: 95\% confidence interval (LCI, UCI)
\item \code{"cv"}: Coefficient of variation
\item \code{"iqr"}: Interquartile range (Q1, Q2, Q3)
}}
}
\value{
A data frame that includes both descriptive statistics (tagged as \code{category = "mean"}) and the original
observations (tagged as \code{category = "observed"}), along with a \code{group_id} column for easy grouping.
}
\description{
Computes and appends group-level descriptive statistics—such as mean, variance, standard deviation, standard error,
confidence intervals, coefficient of variation, and interquartile ranges—to the original dataset. Returns both
summarized and observed rows with a clear distinction.
}
\examples{
\dontrun{

if(!require(remotes)) install.packages("remotes")
if (!requireNamespace("descriptivestat", quietly = TRUE)) {
   remotes::install_github("agronomy4future/descriptivestat", force= TRUE)
}
library(remotes)
library(descriptivestat)

df= data.frame(
tr1= c("A", "A", "B", "B", "A", "A", "B", "B", "A", "A", "B", "B"),
tr2= c("C", "D", "C", "D", "C", "D", "C", "D", "C", "D", "C", "D"),
block= c("I", "I", "I", "I", "II", "II", "II", "II", "III", "III", "III", "III"),
yield= c(122, 122, 121, 144, 121, 122, 111, 111, 125, 98, 100, 121)
)

descriptivestat(
  data= df,
  group_vars= c("tr1","tr2"),
  value_vars= c("yield"),
  output_stats= c("se","cv")
)
}

}
